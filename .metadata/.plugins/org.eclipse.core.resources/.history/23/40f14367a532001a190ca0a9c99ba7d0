package com.zensar.payrollmodule.resource;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;

import com.netflix.discovery.EurekaClient;
import com.zensar.payrollmodule.entity.JSONData;
import com.zensar.payrollmodule.entity.SalaryPaid;
import com.zensar.payrollmodule.entity.SalaryPaidEntity;
import com.zensar.payrollmodule.service.SalaryPaidService;

@RestController
@RequestMapping("/payroll")
public class SalaryPaidResource {

	@Autowired
	private SalaryPaidService salaryPaidService;

	@Autowired
	private RestTemplateBuilder restTemplateBuilder;

	@Autowired
	private EurekaClient eurekaClient;

	@GetMapping("/getsalary")
	public SalaryPaid getPaidSalary(@RequestParam String empid, @RequestParam String date) {


		//http://localhost:8080/travelallowancebydate?startdate=2020-02-01&enddate=2020-02-28&empid=122
		
		
		//getTravelAllowance(employeeId,startDate.toString(),endDate.toString());
		
		
		/*
		 * int empId = salaryPaidEntity.getEmployeeId(); String employeeId =
		 * Integer.toString(empId);
		 * 
		 * LocalDate date = salaryPaidEntity.getDate(); String startDate =
		 * date.toString(); String endDate = date.with(lastDayOfMonth()).toString();
		 */
		  
		  
		  
		  RestTemplate restTemplate = new RestTemplate(); 
		  //String homePageUrl="http://localhost:9001/travelallowancebydate?startdate=2020-01-01&enddate=2020-01-31&empid=1";
		  String homePageUrl="http://localhost:9001/travelallowancebydate";
		  
		  HttpHeaders headers = new HttpHeaders();
		  headers.set("Accept", MediaType.APPLICATION_JSON_VALUE);
		  
		  UriComponentsBuilder queryParam = UriComponentsBuilder.fromHttpUrl(homePageUrl)
		  					.queryParam("startdate", date)
		  					.queryParam("enddate", "2020-01-31")
		  					.queryParam("empid", "1");
		  
		  HttpEntity<?> entity = new HttpEntity<>(headers);
		  
		  HttpEntity<JSONData> response = restTemplate.exchange(
				  queryParam.toUriString(), 
			        HttpMethod.GET, 
			        entity, 
			        JSONData.class);
		  
		  //JSONData forObject = restTemplate.getForObject(homePageUrl, JSONData.class);
		 // InstanceInfo info = eurekaClient.getNextServerFromEureka("travel", false);
		  System.out.println(response.toString());
		  
		 
		 //String homePageUrl = info.getHomePageUrl() + "/travelhistory/"+ salaryPaidEntity.getEmployeeId();
		// String homePageUrl ="http://localhost:9001/travelhistory/" + salaryPaidEntity.getEmployeeId();
		  //String homePageUrl = info.getHomePageUrl() + "travelallowancebydate";
		  
		  //System.out.println("homePageUrl    ---->"+homePageUrl + "/travelallowancebydate");
		// System.out.println("homePageUrl    ---->"+homePageUrl);
		
		/*
		 * UriComponentsBuilder uriBuilder =
		 * UriComponentsBuilder.fromHttpUrl(homePageUrl)
		 * .queryParam("employeeId",employeeId) .queryParam("startDate",startDate)
		 * .queryParam("endDate",endDate);
		 */
		 
		/*
		 * JSONData forObject = restTemplate.getForObject(homePageUrl, JSONData.class,
		 * "1","2020-01-01","2020-01-31");
		 * 
		 * System.out.println(forObject.toString());
		 */
		/*
		 * ResponseEntity<JSONData> exchange = restTemplate.exchange(homePageUrl,
		 * HttpMethod.GET, null, JSONData.class);
		 * 
		 * System.out.println(exchange.toString());
		 */
		
		/*
		 * RestTemplate restTemplate = restTemplateBuilder.build();
		 * 
		 * InstanceInfo info = eurekaClient.getNextServerFromEureka("travel", false);
		 * 
		 * String homePageUrl = info.getHomePageUrl() + "travelallowancebydate";
		 * 
		 * System.out.println(homePageUrl);
		 * 
		 * UriComponentsBuilder.fromHttpUrl(homePageUrl) .quer
		 */
		
		
		
		
		
		
		SalaryPaidEntity salaryPaidEntity = new SalaryPaidEntity(Integer.parseInt(empid),LocalDate.parse(date));
		 
		 
		  
		 
		 
		 return salaryPaidService.getPaidSalary(salaryPaidEntity);
		//return salaryPaidService.getPaidSalary(employeeId,startDate,endDate);
	}

}
