package com.zensar.payrollmodule.resource;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import static java.time.temporal.TemporalAdjusters.lastDayOfMonth;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.EurekaClient;
import com.zensar.payrollmodule.entity.SalaryPaid;
import com.zensar.payrollmodule.entity.SalaryPaidEntity;
import com.zensar.payrollmodule.service.SalaryPaidService;

@RestController
@RequestMapping("/payroll")
public class SalaryPaidResource {

	Integer empId;
	LocalDate date;

	@Autowired
	private SalaryPaidService salaryPaidService;

	@Autowired
	private RestTemplateBuilder restTemplateBuilder;

	@Autowired
	private EurekaClient eurekaClient;

	@GetMapping("/getsalary")
	public SalaryPaid getPaidSalary(@RequestBody SalaryPaidEntity salaryPaidEntity) {

		// System.out.println(salaryPaidEntity.getEmployeeId());
		// System.out.println(salaryPaidEntity.getDate());

		empId = salaryPaidEntity.getEmployeeId();

		date = salaryPaidEntity.getDate();

		String employeeId = empId.toString();

		LocalDate startDate = date.withDayOfMonth(1);
		startDate.toString();

		LocalDate endDate = date.with(lastDayOfMonth());
		endDate.toString();
		
		RestTemplate template = new RestTemplate();
		
		String url = "http://localhost:9001/";
		
		String temp =template.getForObject(url, String.class);

		/*
		 * RestTemplate restTemplate = restTemplateBuilder.build();
		 * 
		 * InstanceInfo info =
		 * eurekaClient.getNextServerFromEureka("travelling-service", false);
		 * 
		 * String homePageUrl = info.getHomePageUrl();
		 * 
		 * System.out.println("homePageUrl    ---->"+homePageUrl);
		 * 
		 * 
		 * ResponseEntity<String> exchange = restTemplate.exchange(homePageUrl,
		 * HttpMethod.GET, null, String.class);
		 * 
		 * String entity = exchange.getBody();
		 */

		return salaryPaidService.getPaidSalary(salaryPaidEntity);
	}

	public Double getTravelAllowance() {

		Double travelAllowance = 0.0;

		String employeeId = empId.toString();

		LocalDate startDate = date.withDayOfMonth(1);
		startDate.toString();

		LocalDate endDate = date.with(lastDayOfMonth());
		endDate.toString();

		return travelAllowance;
	}

}
